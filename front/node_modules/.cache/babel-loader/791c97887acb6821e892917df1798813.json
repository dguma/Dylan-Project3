{"ast":null,"code":"'use strict';\n/*!\n * Module requirements.\n */\n\nvar Types = {\n  Number: require('../number')\n};\n/*!\n * @ignore\n */\n\nexports.castToNumber = castToNumber;\nexports.castArraysOfNumbers = castArraysOfNumbers;\n/*!\n * @ignore\n */\n\nfunction castToNumber(val) {\n  return Types.Number.prototype.cast.call(this, val);\n}\n\nfunction castArraysOfNumbers(arr, self) {\n  arr.forEach(function (v, i) {\n    if (Array.isArray(v)) {\n      castArraysOfNumbers(v, self);\n    } else {\n      arr[i] = castToNumber.call(self, v);\n    }\n  });\n}","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/schema/operators/helpers.js"],"names":["Types","Number","require","exports","castToNumber","castArraysOfNumbers","val","prototype","cast","call","arr","self","forEach","v","i","Array","isArray"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAEC,OAAO,CAAC,WAAD;AADL,CAAZ;AAIA;AACA;AACA;;AAEAC,OAAO,CAACC,YAAR,GAAuBA,YAAvB;AACAD,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;AAEA;AACA;AACA;;AAEA,SAASD,YAAT,CAAsBE,GAAtB,EAA2B;AACzB,SAAON,KAAK,CAACC,MAAN,CAAaM,SAAb,CAAuBC,IAAvB,CAA4BC,IAA5B,CAAiC,IAAjC,EAAuCH,GAAvC,CAAP;AACD;;AAED,SAASD,mBAAT,CAA6BK,GAA7B,EAAkCC,IAAlC,EAAwC;AACtCD,EAAAA,GAAG,CAACE,OAAJ,CAAY,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzB,QAAIC,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAJ,EAAsB;AACpBR,MAAAA,mBAAmB,CAACQ,CAAD,EAAIF,IAAJ,CAAnB;AACD,KAFD,MAEO;AACLD,MAAAA,GAAG,CAACI,CAAD,CAAH,GAASV,YAAY,CAACK,IAAb,CAAkBE,IAAlB,EAAwBE,CAAxB,CAAT;AACD;AACF,GAND;AAOD","sourcesContent":["'use strict';\n\n/*!\n * Module requirements.\n */\n\nvar Types = {\n  Number: require('../number')\n};\n\n/*!\n * @ignore\n */\n\nexports.castToNumber = castToNumber;\nexports.castArraysOfNumbers = castArraysOfNumbers;\n\n/*!\n * @ignore\n */\n\nfunction castToNumber(val) {\n  return Types.Number.prototype.cast.call(this, val);\n}\n\nfunction castArraysOfNumbers(arr, self) {\n  arr.forEach(function(v, i) {\n    if (Array.isArray(v)) {\n      castArraysOfNumbers(v, self);\n    } else {\n      arr[i] = castToNumber.call(self, v);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}