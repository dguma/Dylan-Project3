{"ast":null,"code":"var _jsxFileName = \"/home/pumaguma/Desktop/project-draft/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport Chat from './Chat';\nimport './App.css';\nimport io from 'socket.io-client';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport ChatPage from './components/ChatPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket = io('http://localhost:5000'); // const messages = document.getElementById('messages')\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on('message', msg => {\n      setMessages([...messages, msg]);\n    });\n  }, [messages]);\n  const [mongoMessages, setMongoMessages] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:4001/api/messages').then(response => {\n      // gets the initial data\n      setMongoMessages(response.data);\n    });\n  }, [setMongoMessages]); // console.log(mongoMessages)\n  // console.log(iotest[0])\n\n  function submitHandler(event) {\n    event.preventDefault(); // console.log(event.target.firstChild.value)\n    //  window.location.reload()\n\n    socket.emit('chatMessage', event.target.firstChild.value); // setTest(...test,event.target.firstChild.value)\n    // setTest(test.concat(event.target.firstChild.value));\n    //   setTest(test => [...test, (<div>{event.target.firstChild.value}</div>)]);\n\n    axios.post(\"http://localhost:4001/api/messages\", {\n      name: 'User',\n      message: event.target.firstChild.value\n    }); // .then((res) => console.log(res.data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Chat, {\n      test: iotest,\n      submitHandler: submitHandler,\n      mongoMessages: mongoMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"l9oSGvmCvUD9twQmh74VgGIO4iU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/src/App.js"],"names":["axios","Chat","io","React","useState","useEffect","Fragment","ChatPage","socket","App","message","setMessage","messages","setMessages","on","msg","mongoMessages","setMongoMessages","get","then","response","data","submitHandler","event","preventDefault","emit","target","firstChild","value","post","name","iotest"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,IAAIC,MAAM,GAAGN,EAAE,CAAC,uBAAD,CAAf,C,CAEA;;AAGA,SAASO,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAGFC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAsBC,GAAD,IAAS;AACzBF,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,GAAd,CAAD,CAAX;AACH,KAFF;AAGD,GAJQ,EAIP,CAACH,QAAD,CAJO,CAAT;AAMA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdL,IAAAA,KAAK,CAACkB,GAAN,CAAU,oCAAV,EAAgDC,IAAhD,CAAqDC,QAAQ,IAAI;AAC/D;AACAH,MAAAA,gBAAgB,CAACG,QAAQ,CAACC,IAAV,CAAhB;AACD,KAHD;AAID,GALQ,EAKP,CAACJ,gBAAD,CALO,CAAT,CAde,CAoBf;AACA;;AAGA,WAASK,aAAT,CAAuBC,KAAvB,EAA8B;AAE5BA,IAAAA,KAAK,CAACC,cAAN,GAF4B,CAG5B;AACF;;AACEhB,IAAAA,MAAM,CAACiB,IAAP,CAAY,aAAZ,EAA2BF,KAAK,CAACG,MAAN,CAAaC,UAAb,CAAwBC,KAAnD,EAL4B,CAO5B;AACA;AACF;;AACE5B,IAAAA,KAAK,CAAC6B,IAAN,CAAW,oCAAX,EAAiD;AAC/CC,MAAAA,IAAI,EAAE,MADyC;AAE/CpB,MAAAA,OAAO,EAAEa,KAAK,CAACG,MAAN,CAAaC,UAAb,CAAwBC;AAFc,KAAjD,EAV4B,CAc9B;AACC;;AAIC,sBAEE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEG,MAAZ;AAAoB,MAAA,aAAa,EAAET,aAAnC;AAAkD,MAAA,aAAa,EAAEN;AAAjE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD;;GA3DQP,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import axios from 'axios';\nimport Chat from './Chat'\nimport './App.css';\nimport io from 'socket.io-client';\nimport React, {useState ,useEffect, Fragment} from 'react'\nimport ChatPage from './components/ChatPage';\n\nlet socket = io('http://localhost:5000');\n\n// const messages = document.getElementById('messages')\n\n\nfunction App() {\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([])\n  \n\nuseEffect(() => {\n  socket.on('message', (msg) => {\n       setMessages([...messages, msg])\n   })\n},[messages])\n\nconst [mongoMessages, setMongoMessages] = useState([]);\n\nuseEffect(() => {\n  axios.get('http://localhost:4001/api/messages').then(response => {\n    // gets the initial data\n    setMongoMessages(response.data)\n  })\n},[setMongoMessages]);\n// console.log(mongoMessages)\n// console.log(iotest[0])\n\n\nfunction submitHandler(event) {\n  \n  event.preventDefault();\n  // console.log(event.target.firstChild.value)\n//  window.location.reload()\n  socket.emit('chatMessage', event.target.firstChild.value)\n\n  // setTest(...test,event.target.firstChild.value)\n  // setTest(test.concat(event.target.firstChild.value));\n//   setTest(test => [...test, (<div>{event.target.firstChild.value}</div>)]);\n  axios.post(\"http://localhost:4001/api/messages\", {\n    name: 'User',\n    message: event.target.firstChild.value\n})\n// .then((res) => console.log(res.data));\n}\n\n\n\n  return (\n\n    <Fragment>\n      <Chat test={iotest} submitHandler={submitHandler} mongoMessages={mongoMessages}/>\n      {/* <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Welcome</h1>\n          <div>{iotest}</div>\n        </header>\n        <form id='messageForm' action='' onSubmit={submitHandler}>\n          <input type='text' name='message' />\n          <button>Send</button>\n        </form>\n      </div>    */}\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}