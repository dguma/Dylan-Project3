{"ast":null,"code":"/*!\n * Module dependencies.\n */\nvar MongooseError = require('./');\n/**\n * Schema validator error\n *\n * @param {Object} properties\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction ValidatorError(properties) {\n  var msg = properties.message;\n\n  if (!msg) {\n    msg = MongooseError.messages.general.default;\n  }\n\n  var message = this.formatMessage(msg, properties);\n  MongooseError.call(this, message);\n  this.name = 'ValidatorError';\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.properties = properties;\n  this.kind = properties.type;\n  this.path = properties.path;\n  this.value = properties.value;\n  this.reason = properties.reason;\n}\n/*!\n * Inherits from MongooseError\n */\n\n\nValidatorError.prototype = Object.create(MongooseError.prototype);\nValidatorError.prototype.constructor = MongooseError;\n/*!\n * The object used to define this validator. Not enumerable to hide\n * it from `require('util').inspect()` output re: gh-3925\n */\n\nObject.defineProperty(ValidatorError.prototype, 'properties', {\n  enumerable: false,\n  writable: true,\n  value: null\n});\n/*!\n * Formats error messages\n */\n\nValidatorError.prototype.formatMessage = function (msg, properties) {\n  var propertyNames = Object.keys(properties);\n\n  for (var i = 0; i < propertyNames.length; ++i) {\n    var propertyName = propertyNames[i];\n\n    if (propertyName === 'message') {\n      continue;\n    }\n\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n\n  return msg;\n};\n/*!\n * toString helper\n */\n\n\nValidatorError.prototype.toString = function () {\n  return this.message;\n};\n/*!\n * exports\n */\n\n\nmodule.exports = ValidatorError;","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/error/validator.js"],"names":["MongooseError","require","ValidatorError","properties","msg","message","messages","general","default","formatMessage","call","name","Error","captureStackTrace","stack","kind","type","path","value","reason","prototype","Object","create","constructor","defineProperty","enumerable","writable","propertyNames","keys","i","length","propertyName","replace","toUpperCase","toString","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,IAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AAClC,MAAIC,GAAG,GAAGD,UAAU,CAACE,OAArB;;AACA,MAAI,CAACD,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAGJ,aAAa,CAACM,QAAd,CAAuBC,OAAvB,CAA+BC,OAArC;AACD;;AAED,MAAIH,OAAO,GAAG,KAAKI,aAAL,CAAmBL,GAAnB,EAAwBD,UAAxB,CAAd;AACAH,EAAAA,aAAa,CAACU,IAAd,CAAmB,IAAnB,EAAyBL,OAAzB;AACA,OAAKM,IAAL,GAAY,gBAAZ;;AACA,MAAIC,KAAK,CAACC,iBAAV,EAA6B;AAC3BD,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIF,KAAJ,GAAYE,KAAzB;AACD;;AACD,OAAKX,UAAL,GAAkBA,UAAlB;AACA,OAAKY,IAAL,GAAYZ,UAAU,CAACa,IAAvB;AACA,OAAKC,IAAL,GAAYd,UAAU,CAACc,IAAvB;AACA,OAAKC,KAAL,GAAaf,UAAU,CAACe,KAAxB;AACA,OAAKC,MAAL,GAAchB,UAAU,CAACgB,MAAzB;AACD;AAED;AACA;AACA;;;AAEAjB,cAAc,CAACkB,SAAf,GAA2BC,MAAM,CAACC,MAAP,CAActB,aAAa,CAACoB,SAA5B,CAA3B;AACAlB,cAAc,CAACkB,SAAf,CAAyBG,WAAzB,GAAuCvB,aAAvC;AAEA;AACA;AACA;AACA;;AAEAqB,MAAM,CAACG,cAAP,CAAsBtB,cAAc,CAACkB,SAArC,EAAgD,YAAhD,EAA8D;AAC5DK,EAAAA,UAAU,EAAE,KADgD;AAE5DC,EAAAA,QAAQ,EAAE,IAFkD;AAG5DR,EAAAA,KAAK,EAAE;AAHqD,CAA9D;AAMA;AACA;AACA;;AAEAhB,cAAc,CAACkB,SAAf,CAAyBX,aAAzB,GAAyC,UAASL,GAAT,EAAcD,UAAd,EAA0B;AACjE,MAAIwB,aAAa,GAAGN,MAAM,CAACO,IAAP,CAAYzB,UAAZ,CAApB;;AACA,OAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAACG,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC7C,QAAIE,YAAY,GAAGJ,aAAa,CAACE,CAAD,CAAhC;;AACA,QAAIE,YAAY,KAAK,SAArB,EAAgC;AAC9B;AACD;;AACD3B,IAAAA,GAAG,GAAGA,GAAG,CAAC4B,OAAJ,CAAY,MAAMD,YAAY,CAACE,WAAb,EAAN,GAAmC,GAA/C,EAAoD9B,UAAU,CAAC4B,YAAD,CAA9D,CAAN;AACD;;AACD,SAAO3B,GAAP;AACD,CAVD;AAYA;AACA;AACA;;;AAEAF,cAAc,CAACkB,SAAf,CAAyBc,QAAzB,GAAoC,YAAW;AAC7C,SAAO,KAAK7B,OAAZ;AACD,CAFD;AAIA;AACA;AACA;;;AAEA8B,MAAM,CAACC,OAAP,GAAiBlC,cAAjB","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('./');\n\n/**\n * Schema validator error\n *\n * @param {Object} properties\n * @inherits MongooseError\n * @api private\n */\n\nfunction ValidatorError(properties) {\n  var msg = properties.message;\n  if (!msg) {\n    msg = MongooseError.messages.general.default;\n  }\n\n  var message = this.formatMessage(msg, properties);\n  MongooseError.call(this, message);\n  this.name = 'ValidatorError';\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.properties = properties;\n  this.kind = properties.type;\n  this.path = properties.path;\n  this.value = properties.value;\n  this.reason = properties.reason;\n}\n\n/*!\n * Inherits from MongooseError\n */\n\nValidatorError.prototype = Object.create(MongooseError.prototype);\nValidatorError.prototype.constructor = MongooseError;\n\n/*!\n * The object used to define this validator. Not enumerable to hide\n * it from `require('util').inspect()` output re: gh-3925\n */\n\nObject.defineProperty(ValidatorError.prototype, 'properties', {\n  enumerable: false,\n  writable: true,\n  value: null\n});\n\n/*!\n * Formats error messages\n */\n\nValidatorError.prototype.formatMessage = function(msg, properties) {\n  var propertyNames = Object.keys(properties);\n  for (var i = 0; i < propertyNames.length; ++i) {\n    var propertyName = propertyNames[i];\n    if (propertyName === 'message') {\n      continue;\n    }\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n  return msg;\n};\n\n/*!\n * toString helper\n */\n\nValidatorError.prototype.toString = function() {\n  return this.message;\n};\n\n/*!\n * exports\n */\n\nmodule.exports = ValidatorError;\n"]},"metadata":{},"sourceType":"script"}