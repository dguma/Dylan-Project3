{"ast":null,"code":"'use strict';\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param {Function} fn The function to stringify\n */\n\nfunction normalizedFunctionString(fn) {\n  return fn.toString().replace(/function *\\(/, 'function (');\n}\n\nmodule.exports = {\n  normalizedFunctionString: normalizedFunctionString\n};","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/bson/lib/bson/parser/utils.js"],"names":["normalizedFunctionString","fn","toString","replace","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AACA,SAASA,wBAAT,CAAkCC,EAAlC,EAAsC;AACpC,SAAOA,EAAE,CAACC,QAAH,GAAcC,OAAd,CAAsB,cAAtB,EAAsC,YAAtC,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,wBAAwB,EAAEA;AADX,CAAjB","sourcesContent":["'use strict';\n\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param {Function} fn The function to stringify\n */\nfunction normalizedFunctionString(fn) {\n  return fn.toString().replace(/function *\\(/, 'function (');\n}\n\nmodule.exports = {\n  normalizedFunctionString: normalizedFunctionString\n};\n\n"]},"metadata":{},"sourceType":"script"}