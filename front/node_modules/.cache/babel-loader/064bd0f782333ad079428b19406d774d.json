{"ast":null,"code":"/**\n * ES6 Promise wrapper constructor.\n *\n * Promises are returned from executed queries. Example:\n *\n *     var query = Candy.find({ bar: true });\n *     var promise = query.exec();\n *\n * DEPRECATED. Mongoose 5.0 will use native promises by default (or bluebird,\n * if native promises are not present) but still\n * support plugging in your own ES6-compatible promises library. Mongoose 5.0\n * will **not** support mpromise.\n *\n * @param {Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature\n * @api public\n */\nfunction ES6Promise() {\n  throw new Error('Can\\'t use ES6 promise with mpromise style constructor');\n}\n\nES6Promise.use = function (Promise) {\n  ES6Promise.ES6 = Promise;\n};\n\nmodule.exports = ES6Promise;","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/ES6Promise.js"],"names":["ES6Promise","Error","use","Promise","ES6","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,GAAsB;AACpB,QAAM,IAAIC,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAEDD,UAAU,CAACE,GAAX,GAAiB,UAASC,OAAT,EAAkB;AACjCH,EAAAA,UAAU,CAACI,GAAX,GAAiBD,OAAjB;AACD,CAFD;;AAIAE,MAAM,CAACC,OAAP,GAAiBN,UAAjB","sourcesContent":["/**\n * ES6 Promise wrapper constructor.\n *\n * Promises are returned from executed queries. Example:\n *\n *     var query = Candy.find({ bar: true });\n *     var promise = query.exec();\n *\n * DEPRECATED. Mongoose 5.0 will use native promises by default (or bluebird,\n * if native promises are not present) but still\n * support plugging in your own ES6-compatible promises library. Mongoose 5.0\n * will **not** support mpromise.\n *\n * @param {Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature\n * @api public\n */\n\nfunction ES6Promise() {\n  throw new Error('Can\\'t use ES6 promise with mpromise style constructor');\n}\n\nES6Promise.use = function(Promise) {\n  ES6Promise.ES6 = Promise;\n};\n\nmodule.exports = ES6Promise;\n"]},"metadata":{},"sourceType":"script"}