{"ast":null,"code":"/*\n * config.js: Default settings for all levels that winston knows about\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n *\n */\nvar colors = require('colors/safe'); // Fix colors not appearing in non-tty environments\n\n\ncolors.enabled = true;\nvar config = exports,\n    allColors = exports.allColors = {};\n\nconfig.addColors = function (colors) {\n  mixin(allColors, colors);\n};\n\nconfig.colorize = function (level, message) {\n  if (typeof message === 'undefined') message = level;\n  var colorized = message;\n\n  if (allColors[level] instanceof Array) {\n    for (var i = 0, l = allColors[level].length; i < l; ++i) {\n      colorized = colors[allColors[level][i]](colorized);\n    }\n  } else if (allColors[level].match(/\\s/)) {\n    var colorArr = allColors[level].split(/\\s+/);\n\n    for (var i = 0; i < colorArr.length; ++i) {\n      colorized = colors[colorArr[i]](colorized);\n    }\n\n    allColors[level] = colorArr;\n  } else {\n    colorized = colors[allColors[level]](colorized);\n  }\n\n  return colorized;\n}; //\n// Export config sets\n//\n\n\nconfig.cli = require('./config/cli-config');\nconfig.npm = require('./config/npm-config');\nconfig.syslog = require('./config/syslog-config'); //\n// Add colors for pre-defined config sets\n//\n\nconfig.addColors(config.cli.colors);\nconfig.addColors(config.npm.colors);\nconfig.addColors(config.syslog.colors);\n\nfunction mixin(target) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  args.forEach(function (a) {\n    var keys = Object.keys(a);\n\n    for (var i = 0; i < keys.length; i++) {\n      target[keys[i]] = a[keys[i]];\n    }\n  });\n  return target;\n}\n\n;","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/winston/lib/winston/config.js"],"names":["colors","require","enabled","config","exports","allColors","addColors","mixin","colorize","level","message","colorized","Array","i","l","length","match","colorArr","split","cli","npm","syslog","target","args","prototype","slice","call","arguments","forEach","a","keys","Object"],"mappings":"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","sourcesContent":["/*\n * config.js: Default settings for all levels that winston knows about\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n *\n */\n\nvar colors = require('colors/safe');\n\n// Fix colors not appearing in non-tty environments\ncolors.enabled = true;\n\nvar config = exports,\n    allColors = exports.allColors = {};\n\nconfig.addColors = function (colors) {\n  mixin(allColors, colors);\n};\n\nconfig.colorize = function (level, message) {\n  if (typeof message === 'undefined') message = level;\n\n  var colorized = message;\n  if (allColors[level] instanceof Array) {\n    for (var i = 0, l = allColors[level].length; i < l; ++i) {\n      colorized = colors[allColors[level][i]](colorized);\n    }\n  }\n  else if (allColors[level].match(/\\s/)) {\n    var colorArr = allColors[level].split(/\\s+/);\n    for (var i = 0; i < colorArr.length; ++i) {\n      colorized = colors[colorArr[i]](colorized);\n    }\n    allColors[level] = colorArr;\n  }\n  else {\n    colorized = colors[allColors[level]](colorized);\n  }\n\n  return colorized;\n};\n\n//\n// Export config sets\n//\nconfig.cli    = require('./config/cli-config');\nconfig.npm    = require('./config/npm-config');\nconfig.syslog = require('./config/syslog-config');\n\n//\n// Add colors for pre-defined config sets\n//\nconfig.addColors(config.cli.colors);\nconfig.addColors(config.npm.colors);\nconfig.addColors(config.syslog.colors);\n\nfunction mixin (target) {\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  args.forEach(function (a) {\n    var keys = Object.keys(a);\n    for (var i = 0; i < keys.length; i++) {\n      target[keys[i]] = a[keys[i]];\n    }\n  });\n  return target;\n};\n"]},"metadata":{},"sourceType":"script"}