{"ast":null,"code":"/*!\n * Module requirements\n */\nvar MongooseError = require('./');\n\nvar utils = require('../utils');\n/**\n * Document Validation Error\n *\n * @api private\n * @param {Document} instance\n * @inherits MongooseError\n */\n\n\nfunction ValidationError(instance) {\n  this.errors = {};\n  this._message = '';\n\n  if (instance && instance.constructor.name === 'model') {\n    this._message = instance.constructor.modelName + ' validation failed';\n    MongooseError.call(this, this._message);\n  } else {\n    this._message = 'Validation failed';\n    MongooseError.call(this, this._message);\n  }\n\n  this.name = 'ValidationError';\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  if (instance) {\n    instance.errors = this.errors;\n  }\n}\n/*!\n * Inherits from MongooseError.\n */\n\n\nValidationError.prototype = Object.create(MongooseError.prototype);\nValidationError.prototype.constructor = MongooseError;\n/**\n * Console.log helper\n */\n\nValidationError.prototype.toString = function () {\n  return this.name + ': ' + _generateMessage(this);\n};\n/*!\n * inspect helper\n */\n\n\nValidationError.prototype.inspect = function () {\n  return utils.assign(new Error(this.message), this);\n};\n/*!\n * Helper for JSON.stringify\n */\n\n\nValidationError.prototype.toJSON = function () {\n  return utils.assign({}, this, {\n    message: this.message\n  });\n};\n/*!\n * add message\n */\n\n\nValidationError.prototype.addError = function (path, error) {\n  this.errors[path] = error;\n  this.message = this._message + ': ' + _generateMessage(this);\n};\n/*!\n * ignore\n */\n\n\nfunction _generateMessage(err) {\n  var keys = Object.keys(err.errors || {});\n  var len = keys.length;\n  var msgs = [];\n  var key;\n\n  for (var i = 0; i < len; ++i) {\n    key = keys[i];\n\n    if (err === err.errors[key]) {\n      continue;\n    }\n\n    msgs.push(key + ': ' + err.errors[key].message);\n  }\n\n  return msgs.join(', ');\n}\n/*!\n * Module exports\n */\n\n\nmodule.exports = exports = ValidationError;","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/error/validation.js"],"names":["MongooseError","require","utils","ValidationError","instance","errors","_message","constructor","name","modelName","call","Error","captureStackTrace","stack","prototype","Object","create","toString","_generateMessage","inspect","assign","message","toJSON","addError","path","error","err","keys","len","length","msgs","key","i","push","join","module","exports"],"mappings":"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","sourcesContent":["/*!\n * Module requirements\n */\n\nvar MongooseError = require('./');\nvar utils = require('../utils');\n\n/**\n * Document Validation Error\n *\n * @api private\n * @param {Document} instance\n * @inherits MongooseError\n */\n\nfunction ValidationError(instance) {\n  this.errors = {};\n  this._message = '';\n  if (instance && instance.constructor.name === 'model') {\n    this._message = instance.constructor.modelName + ' validation failed';\n    MongooseError.call(this, this._message);\n  } else {\n    this._message = 'Validation failed';\n    MongooseError.call(this, this._message);\n  }\n  this.name = 'ValidationError';\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  if (instance) {\n    instance.errors = this.errors;\n  }\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nValidationError.prototype = Object.create(MongooseError.prototype);\nValidationError.prototype.constructor = MongooseError;\n\n/**\n * Console.log helper\n */\n\nValidationError.prototype.toString = function() {\n  return this.name + ': ' + _generateMessage(this);\n};\n\n/*!\n * inspect helper\n */\n\nValidationError.prototype.inspect = function() {\n  return utils.assign(new Error(this.message), this);\n};\n\n/*!\n * Helper for JSON.stringify\n */\n\nValidationError.prototype.toJSON = function() {\n  return utils.assign({}, this, { message: this.message });\n};\n\n/*!\n * add message\n */\n\nValidationError.prototype.addError = function(path, error) {\n  this.errors[path] = error;\n  this.message = this._message + ': ' + _generateMessage(this);\n};\n\n/*!\n * ignore\n */\n\nfunction _generateMessage(err) {\n  var keys = Object.keys(err.errors || {});\n  var len = keys.length;\n  var msgs = [];\n  var key;\n\n  for (var i = 0; i < len; ++i) {\n    key = keys[i];\n    if (err === err.errors[key]) {\n      continue;\n    }\n    msgs.push(key + ': ' + err.errors[key].message);\n  }\n\n  return msgs.join(', ');\n}\n\n/*!\n * Module exports\n */\n\nmodule.exports = exports = ValidationError;\n"]},"metadata":{},"sourceType":"script"}