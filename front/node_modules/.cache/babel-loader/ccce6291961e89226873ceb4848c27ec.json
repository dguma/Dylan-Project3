{"ast":null,"code":"/* eslint no-func-assign: 1 */\n\n/*!\n * Module dependencies.\n */\nvar Document = require('../document_provider')();\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar PromiseProvider = require('../promise_provider');\n/**\n * EmbeddedDocument constructor.\n *\n * @param {Object} obj js object returned from the db\n * @param {MongooseDocumentArray} parentArr the parent array of this document\n * @param {Boolean} skipId\n * @inherits Document\n * @api private\n */\n\n\nfunction EmbeddedDocument(obj, parentArr, skipId, fields, index) {\n  if (parentArr) {\n    this.__parentArray = parentArr;\n    this.__parent = parentArr._parent;\n  } else {\n    this.__parentArray = undefined;\n    this.__parent = undefined;\n  }\n\n  this.__index = index;\n  Document.call(this, obj, fields, skipId);\n\n  var _this = this;\n\n  this.on('isNew', function (val) {\n    _this.isNew = val;\n  });\n\n  _this.on('save', function () {\n    _this.constructor.emit('save', _this);\n  });\n}\n/*!\n * Inherit from Document\n */\n\n\nEmbeddedDocument.prototype = Object.create(Document.prototype);\nEmbeddedDocument.prototype.constructor = EmbeddedDocument;\n\nfor (var i in EventEmitter.prototype) {\n  EmbeddedDocument[i] = EventEmitter.prototype[i];\n}\n\nEmbeddedDocument.prototype.toBSON = function () {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    _skipDepopulateTopLevel: true,\n    depopulate: true,\n    flattenDecimals: false\n  });\n};\n/**\n * Marks the embedded doc modified.\n *\n * ####Example:\n *\n *     var doc = blogpost.comments.id(hexstring);\n *     doc.mixed.type = 'changed';\n *     doc.markModified('mixed.type');\n *\n * @param {String} path the path which changed\n * @api public\n * @receiver EmbeddedDocument\n */\n\n\nEmbeddedDocument.prototype.markModified = function (path) {\n  this.$__.activePaths.modify(path);\n\n  if (!this.__parentArray) {\n    return;\n  }\n\n  if (this.isNew) {\n    // Mark the WHOLE parent array as modified\n    // if this is a new document (i.e., we are initializing\n    // a document),\n    this.__parentArray._markModified();\n  } else {\n    this.__parentArray._markModified(this, path);\n  }\n};\n/*!\n * ignore\n */\n\n\nEmbeddedDocument.prototype.populate = function () {\n  throw new Error('Mongoose does not support calling populate() on nested ' + 'docs. Instead of `doc.arr[0].populate(\"path\")`, use ' + '`doc.populate(\"arr.0.path\")`');\n};\n/**\n * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\n\nEmbeddedDocument.prototype.save = function (fn) {\n  var Promise = PromiseProvider.get();\n  return new Promise.ES6(function (resolve) {\n    fn && fn();\n    resolve();\n  });\n};\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {EmbeddedDocument} sub\n * @api private\n */\n\n\nfunction registerRemoveListener(sub) {\n  var owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}\n/**\n * Removes the subdocument from its parent array.\n *\n * @param {Object} [options]\n * @param {Function} [fn]\n * @api public\n */\n\n\nEmbeddedDocument.prototype.remove = function (options, fn) {\n  if (typeof options === 'function' && !fn) {\n    fn = options;\n    options = undefined;\n  }\n\n  if (!this.__parentArray || options && options.noop) {\n    fn && fn(null);\n    return this;\n  }\n\n  var _id;\n\n  if (!this.willRemove) {\n    _id = this._doc._id;\n\n    if (!_id) {\n      throw new Error('For your own good, Mongoose does not know ' + 'how to remove an EmbeddedDocument that has no _id');\n    }\n\n    this.__parentArray.pull({\n      _id: _id\n    });\n\n    this.willRemove = true;\n    registerRemoveListener(this);\n  }\n\n  if (fn) {\n    fn(null);\n  }\n\n  return this;\n};\n/**\n * Override #update method of parent documents.\n * @api private\n */\n\n\nEmbeddedDocument.prototype.update = function () {\n  throw new Error('The #update method is not available on EmbeddedDocuments');\n};\n/**\n * Helper for console.log\n *\n * @api public\n */\n\n\nEmbeddedDocument.prototype.inspect = function () {\n  return this.toObject({\n    transform: false,\n    retainKeyOrder: true,\n    virtuals: false,\n    flattenDecimals: false\n  });\n};\n/**\n * Marks a path as invalid, causing validation to fail.\n *\n * @param {String} path the field to invalidate\n * @param {String|Error} err error which states the reason `path` was invalid\n * @return {Boolean}\n * @api public\n */\n\n\nEmbeddedDocument.prototype.invalidate = function (path, err, val, first) {\n  if (!this.__parent) {\n    Document.prototype.invalidate.call(this, path, err, val);\n\n    if (err.$isValidatorError) {\n      return true;\n    }\n\n    throw err;\n  }\n\n  var index = this.__index;\n\n  if (typeof index !== 'undefined') {\n    var parentPath = this.__parentArray._path;\n    var fullPath = [parentPath, index, path].join('.');\n\n    this.__parent.invalidate(fullPath, err, val);\n  }\n\n  if (first) {\n    this.$__.validationError = this.ownerDocument().$__.validationError;\n  }\n\n  return true;\n};\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver EmbeddedDocument\n */\n\n\nEmbeddedDocument.prototype.$markValid = function (path) {\n  if (!this.__parent) {\n    return;\n  }\n\n  var index = this.__index;\n\n  if (typeof index !== 'undefined') {\n    var parentPath = this.__parentArray._path;\n    var fullPath = [parentPath, index, path].join('.');\n\n    this.__parent.$markValid(fullPath);\n  }\n};\n/**\n * Checks if a path is invalid\n *\n * @param {String} path the field to check\n * @api private\n * @method $isValid\n * @receiver EmbeddedDocument\n */\n\n\nEmbeddedDocument.prototype.$isValid = function (path) {\n  var index = this.__index;\n\n  if (typeof index !== 'undefined' && this.__parent) {\n    return !this.__parent.$__.validationError || !this.__parent.$__.validationError.errors[this.$__fullPath(path)];\n  }\n\n  return true;\n};\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\n\nEmbeddedDocument.prototype.ownerDocument = function () {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  var parent = this.__parent;\n\n  if (!parent) {\n    return this;\n  }\n\n  while (parent.__parent || parent.$parent) {\n    parent = parent.__parent || parent.$parent;\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n/**\n * Returns the full path to this document. If optional `path` is passed, it is appended to the full path.\n *\n * @param {String} [path]\n * @return {String}\n * @api private\n * @method $__fullPath\n * @memberOf EmbeddedDocument\n */\n\n\nEmbeddedDocument.prototype.$__fullPath = function (path) {\n  if (!this.$__.fullPath) {\n    var parent = this; // eslint-disable-line consistent-this\n\n    if (!parent.__parent) {\n      return path;\n    }\n\n    var paths = [];\n\n    while (parent.__parent || parent.$parent) {\n      if (parent.__parent) {\n        paths.unshift(parent.__parentArray._path);\n      } else {\n        paths.unshift(parent.$basePath);\n      }\n\n      parent = parent.__parent || parent.$parent;\n    }\n\n    this.$__.fullPath = paths.join('.');\n\n    if (!this.$__.ownerDocument) {\n      // optimization\n      this.$__.ownerDocument = parent;\n    }\n  }\n\n  return path ? this.$__.fullPath + '.' + path : this.$__.fullPath;\n};\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\n\nEmbeddedDocument.prototype.parent = function () {\n  return this.__parent;\n};\n/**\n * Returns this sub-documents parent array.\n *\n * @api public\n */\n\n\nEmbeddedDocument.prototype.parentArray = function () {\n  return this.__parentArray;\n};\n/*!\n * Module exports.\n */\n\n\nmodule.exports = EmbeddedDocument;","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/types/embedded.js"],"names":["Document","require","EventEmitter","PromiseProvider","EmbeddedDocument","obj","parentArr","skipId","fields","index","__parentArray","__parent","_parent","undefined","__index","call","_this","on","val","isNew","constructor","emit","prototype","Object","create","i","toBSON","toObject","transform","virtuals","_skipDepopulateTopLevel","depopulate","flattenDecimals","markModified","path","$__","activePaths","modify","_markModified","populate","Error","save","fn","Promise","get","ES6","resolve","registerRemoveListener","sub","owner","ownerDocument","emitRemove","removeListener","remove","options","noop","_id","willRemove","_doc","pull","update","inspect","retainKeyOrder","invalidate","err","first","$isValidatorError","parentPath","_path","fullPath","join","validationError","$markValid","$isValid","errors","$__fullPath","parent","$parent","paths","unshift","$basePath","parentArray","module","exports"],"mappings":"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","sourcesContent":["/* eslint no-func-assign: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar Document = require('../document_provider')();\nvar EventEmitter = require('events').EventEmitter;\nvar PromiseProvider = require('../promise_provider');\n\n/**\n * EmbeddedDocument constructor.\n *\n * @param {Object} obj js object returned from the db\n * @param {MongooseDocumentArray} parentArr the parent array of this document\n * @param {Boolean} skipId\n * @inherits Document\n * @api private\n */\n\nfunction EmbeddedDocument(obj, parentArr, skipId, fields, index) {\n  if (parentArr) {\n    this.__parentArray = parentArr;\n    this.__parent = parentArr._parent;\n  } else {\n    this.__parentArray = undefined;\n    this.__parent = undefined;\n  }\n  this.__index = index;\n\n  Document.call(this, obj, fields, skipId);\n\n  var _this = this;\n  this.on('isNew', function(val) {\n    _this.isNew = val;\n  });\n\n  _this.on('save', function() {\n    _this.constructor.emit('save', _this);\n  });\n}\n\n/*!\n * Inherit from Document\n */\nEmbeddedDocument.prototype = Object.create(Document.prototype);\nEmbeddedDocument.prototype.constructor = EmbeddedDocument;\n\nfor (var i in EventEmitter.prototype) {\n  EmbeddedDocument[i] = EventEmitter.prototype[i];\n}\n\nEmbeddedDocument.prototype.toBSON = function() {\n  return this.toObject({\n    transform: false,\n    virtuals: false,\n    _skipDepopulateTopLevel: true,\n    depopulate: true,\n    flattenDecimals: false\n  });\n};\n\n/**\n * Marks the embedded doc modified.\n *\n * ####Example:\n *\n *     var doc = blogpost.comments.id(hexstring);\n *     doc.mixed.type = 'changed';\n *     doc.markModified('mixed.type');\n *\n * @param {String} path the path which changed\n * @api public\n * @receiver EmbeddedDocument\n */\n\nEmbeddedDocument.prototype.markModified = function(path) {\n  this.$__.activePaths.modify(path);\n  if (!this.__parentArray) {\n    return;\n  }\n\n  if (this.isNew) {\n    // Mark the WHOLE parent array as modified\n    // if this is a new document (i.e., we are initializing\n    // a document),\n    this.__parentArray._markModified();\n  } else {\n    this.__parentArray._markModified(this, path);\n  }\n};\n\n/*!\n * ignore\n */\n\nEmbeddedDocument.prototype.populate = function() {\n  throw new Error('Mongoose does not support calling populate() on nested ' +\n    'docs. Instead of `doc.arr[0].populate(\"path\")`, use ' +\n    '`doc.populate(\"arr.0.path\")`');\n};\n\n/**\n * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)\n *\n * ####NOTE:\n *\n * _This is a no-op. Does not actually save the doc to the db._\n *\n * @param {Function} [fn]\n * @return {Promise} resolved Promise\n * @api private\n */\n\nEmbeddedDocument.prototype.save = function(fn) {\n  var Promise = PromiseProvider.get();\n  return new Promise.ES6(function(resolve) {\n    fn && fn();\n    resolve();\n  });\n};\n\n/*!\n * Registers remove event listeners for triggering\n * on subdocuments.\n *\n * @param {EmbeddedDocument} sub\n * @api private\n */\n\nfunction registerRemoveListener(sub) {\n  var owner = sub.ownerDocument();\n\n  function emitRemove() {\n    owner.removeListener('save', emitRemove);\n    owner.removeListener('remove', emitRemove);\n    sub.emit('remove', sub);\n    sub.constructor.emit('remove', sub);\n    owner = sub = null;\n  }\n\n  owner.on('save', emitRemove);\n  owner.on('remove', emitRemove);\n}\n\n/**\n * Removes the subdocument from its parent array.\n *\n * @param {Object} [options]\n * @param {Function} [fn]\n * @api public\n */\n\nEmbeddedDocument.prototype.remove = function(options, fn) {\n  if ( typeof options === 'function' && !fn ) {\n    fn = options;\n    options = undefined;\n  }\n  if (!this.__parentArray || (options && options.noop)) {\n    fn && fn(null);\n    return this;\n  }\n\n  var _id;\n  if (!this.willRemove) {\n    _id = this._doc._id;\n    if (!_id) {\n      throw new Error('For your own good, Mongoose does not know ' +\n          'how to remove an EmbeddedDocument that has no _id');\n    }\n    this.__parentArray.pull({_id: _id});\n    this.willRemove = true;\n    registerRemoveListener(this);\n  }\n\n  if (fn) {\n    fn(null);\n  }\n\n  return this;\n};\n\n/**\n * Override #update method of parent documents.\n * @api private\n */\n\nEmbeddedDocument.prototype.update = function() {\n  throw new Error('The #update method is not available on EmbeddedDocuments');\n};\n\n/**\n * Helper for console.log\n *\n * @api public\n */\n\nEmbeddedDocument.prototype.inspect = function() {\n  return this.toObject({\n    transform: false,\n    retainKeyOrder: true,\n    virtuals: false,\n    flattenDecimals: false\n  });\n};\n\n/**\n * Marks a path as invalid, causing validation to fail.\n *\n * @param {String} path the field to invalidate\n * @param {String|Error} err error which states the reason `path` was invalid\n * @return {Boolean}\n * @api public\n */\n\nEmbeddedDocument.prototype.invalidate = function(path, err, val, first) {\n  if (!this.__parent) {\n    Document.prototype.invalidate.call(this, path, err, val);\n    if (err.$isValidatorError) {\n      return true;\n    }\n    throw err;\n  }\n\n  var index = this.__index;\n  if (typeof index !== 'undefined') {\n    var parentPath = this.__parentArray._path;\n    var fullPath = [parentPath, index, path].join('.');\n    this.__parent.invalidate(fullPath, err, val);\n  }\n\n  if (first) {\n    this.$__.validationError = this.ownerDocument().$__.validationError;\n  }\n\n  return true;\n};\n\n/**\n * Marks a path as valid, removing existing validation errors.\n *\n * @param {String} path the field to mark as valid\n * @api private\n * @method $markValid\n * @receiver EmbeddedDocument\n */\n\nEmbeddedDocument.prototype.$markValid = function(path) {\n  if (!this.__parent) {\n    return;\n  }\n\n  var index = this.__index;\n  if (typeof index !== 'undefined') {\n    var parentPath = this.__parentArray._path;\n    var fullPath = [parentPath, index, path].join('.');\n    this.__parent.$markValid(fullPath);\n  }\n};\n\n/**\n * Checks if a path is invalid\n *\n * @param {String} path the field to check\n * @api private\n * @method $isValid\n * @receiver EmbeddedDocument\n */\n\nEmbeddedDocument.prototype.$isValid = function(path) {\n  var index = this.__index;\n  if (typeof index !== 'undefined' && this.__parent) {\n    return !this.__parent.$__.validationError ||\n      !this.__parent.$__.validationError.errors[this.$__fullPath(path)];\n  }\n\n  return true;\n};\n\n/**\n * Returns the top level document of this sub-document.\n *\n * @return {Document}\n */\n\nEmbeddedDocument.prototype.ownerDocument = function() {\n  if (this.$__.ownerDocument) {\n    return this.$__.ownerDocument;\n  }\n\n  var parent = this.__parent;\n  if (!parent) {\n    return this;\n  }\n\n  while (parent.__parent || parent.$parent) {\n    parent = parent.__parent || parent.$parent;\n  }\n\n  this.$__.ownerDocument = parent;\n  return this.$__.ownerDocument;\n};\n\n/**\n * Returns the full path to this document. If optional `path` is passed, it is appended to the full path.\n *\n * @param {String} [path]\n * @return {String}\n * @api private\n * @method $__fullPath\n * @memberOf EmbeddedDocument\n */\n\nEmbeddedDocument.prototype.$__fullPath = function(path) {\n  if (!this.$__.fullPath) {\n    var parent = this; // eslint-disable-line consistent-this\n    if (!parent.__parent) {\n      return path;\n    }\n\n    var paths = [];\n    while (parent.__parent || parent.$parent) {\n      if (parent.__parent) {\n        paths.unshift(parent.__parentArray._path);\n      } else {\n        paths.unshift(parent.$basePath);\n      }\n      parent = parent.__parent || parent.$parent;\n    }\n\n    this.$__.fullPath = paths.join('.');\n\n    if (!this.$__.ownerDocument) {\n      // optimization\n      this.$__.ownerDocument = parent;\n    }\n  }\n\n  return path\n      ? this.$__.fullPath + '.' + path\n      : this.$__.fullPath;\n};\n\n/**\n * Returns this sub-documents parent document.\n *\n * @api public\n */\n\nEmbeddedDocument.prototype.parent = function() {\n  return this.__parent;\n};\n\n/**\n * Returns this sub-documents parent array.\n *\n * @api public\n */\n\nEmbeddedDocument.prototype.parentArray = function() {\n  return this.__parentArray;\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = EmbeddedDocument;\n"]},"metadata":{},"sourceType":"script"}