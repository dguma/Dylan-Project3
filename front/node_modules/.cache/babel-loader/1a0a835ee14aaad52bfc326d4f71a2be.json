{"ast":null,"code":"/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\nvar SchemaType = require('../schematype');\n\nvar CastError = SchemaType.CastError;\n\nvar Decimal128Type = require('../types/decimal128');\n\nvar utils = require('../utils');\n\nvar Document;\n/**\n * Decimal128 SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Decimal128(key, options) {\n  SchemaType.call(this, key, options, 'Decimal128');\n}\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\n\n\nDecimal128.schemaName = 'Decimal128';\n/*!\n * Inherits from SchemaType.\n */\n\nDecimal128.prototype = Object.create(SchemaType.prototype);\nDecimal128.prototype.constructor = Decimal128;\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nDecimal128.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n\n  return value instanceof Decimal128Type;\n};\n/**\n * Casts to Decimal128\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\n\nDecimal128.prototype.cast = function (value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n    if (value === null || value === undefined) {\n      return value;\n    } // lazy load\n\n\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    } // setting a populated path\n\n\n    if (value instanceof Decimal128Type) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('Decimal128', value, this.path);\n    } // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n\n\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = value;\n\n    if (!doc.$__.populated || !doc.$__.populated[path] || !doc.$__.populated[path].options || !doc.$__.populated[path].options.options || !doc.$__.populated[path].options.options.lean) {\n      ret = new pop.options.model(value);\n      ret.$__.wasPopulated = true;\n    }\n\n    return ret;\n  }\n\n  if (value == null) {\n    return value;\n  }\n\n  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {\n    return Decimal128Type.fromString(value.$numberDecimal);\n  }\n\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n\n  throw new CastError('Decimal128', value, this.path);\n};\n/*!\n * ignore\n */\n\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nDecimal128.prototype.$conditionalHandlers = utils.options(SchemaType.prototype.$conditionalHandlers, {\n  $gt: handleSingle,\n  $gte: handleSingle,\n  $lt: handleSingle,\n  $lte: handleSingle\n});\n/*!\n * Module exports.\n */\n\nmodule.exports = Decimal128;","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/schema/decimal128.js"],"names":["SchemaType","require","CastError","Decimal128Type","utils","Document","Decimal128","key","options","call","schemaName","prototype","Object","create","constructor","checkRequired","value","doc","_isRef","cast","init","undefined","$__","wasPopulated","Buffer","isBuffer","isObject","path","$__fullPath","owner","ownerDocument","pop","populated","ret","lean","model","$numberDecimal","fromString","handleSingle","val","$conditionalHandlers","$gt","$gte","$lt","$lte","module","exports"],"mappings":"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","sourcesContent":["/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype');\nvar CastError = SchemaType.CastError;\nvar Decimal128Type = require('../types/decimal128');\nvar utils = require('../utils');\nvar Document;\n\n/**\n * Decimal128 SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Decimal128(key, options) {\n  SchemaType.call(this, key, options, 'Decimal128');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDecimal128.schemaName = 'Decimal128';\n\n/*!\n * Inherits from SchemaType.\n */\nDecimal128.prototype = Object.create(SchemaType.prototype);\nDecimal128.prototype.constructor = Decimal128;\n\n/**\n * Check if the given value satisfies a required validator.\n *\n * @param {Any} value\n * @param {Document} doc\n * @return {Boolean}\n * @api public\n */\n\nDecimal128.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return !!value;\n  }\n  return value instanceof Decimal128Type;\n};\n\n/**\n * Casts to Decimal128\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nDecimal128.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (value instanceof Decimal128Type) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('Decimal128', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = value;\n    if (!doc.$__.populated ||\n        !doc.$__.populated[path] ||\n        !doc.$__.populated[path].options ||\n        !doc.$__.populated[path].options.options ||\n        !doc.$__.populated[path].options.options.lean) {\n      ret = new pop.options.model(value);\n      ret.$__.wasPopulated = true;\n    }\n\n    return ret;\n  }\n\n  if (value == null) {\n    return value;\n  }\n\n  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {\n    return Decimal128Type.fromString(value.$numberDecimal);\n  }\n\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n\n  throw new CastError('Decimal128', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nDecimal128.prototype.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {\n      $gt: handleSingle,\n      $gte: handleSingle,\n      $lt: handleSingle,\n      $lte: handleSingle\n    });\n\n/*!\n * Module exports.\n */\n\nmodule.exports = Decimal128;\n"]},"metadata":{},"sourceType":"script"}