{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nvar $exists = require('./operators/exists');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar SchemaType = require('../schematype');\n\nvar castToNumber = require('./operators/helpers').castToNumber;\n\nvar discriminator = require('../services/model/discriminator');\n\nvar geospatial = require('./operators/geospatial');\n\nvar Subdocument;\nmodule.exports = Embedded;\n/**\n * Sub-schema schematype constructor\n *\n * @param {Schema} schema\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Embedded(schema, path, options) {\n  this.caster = _createConstructor(schema);\n  this.caster.prototype.$basePath = path;\n  this.schema = schema;\n  this.$isSingleNested = true;\n  SchemaType.call(this, path, options, 'Embedded');\n}\n/*!\n * ignore\n */\n\n\nEmbedded.prototype = Object.create(SchemaType.prototype);\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema) {\n  // lazy load\n  Subdocument || (Subdocument = require('../types/subdocument'));\n\n  var _embedded = function SingleNested(value, path, parent) {\n    var _this = this;\n\n    this.$parent = parent;\n    Subdocument.apply(this, arguments);\n\n    if (parent) {\n      parent.on('save', function () {\n        _this.emit('save', _this);\n\n        _this.constructor.emit('save', _this);\n      });\n      parent.on('isNew', function (val) {\n        _this.isNew = val;\n\n        _this.emit('isNew', val);\n\n        _this.constructor.emit('isNew', val);\n      });\n    }\n  };\n\n  _embedded.prototype = Object.create(Subdocument.prototype);\n\n  _embedded.prototype.$__setSchema(schema);\n\n  _embedded.prototype.constructor = _embedded;\n  _embedded.schema = schema;\n  _embedded.$isSingleNested = true;\n\n  _embedded.prototype.toBSON = function () {\n    return this.toObject({\n      transform: false,\n      retainKeyOrder: true,\n      virtuals: false,\n      _skipDepopulateTopLevel: true,\n      depopulate: true,\n      flattenDecimals: false\n    });\n  }; // apply methods\n\n\n  for (var i in schema.methods) {\n    _embedded.prototype[i] = schema.methods[i];\n  } // apply statics\n\n\n  for (i in schema.statics) {\n    _embedded[i] = schema.statics[i];\n  }\n\n  for (i in EventEmitter.prototype) {\n    _embedded[i] = EventEmitter.prototype[i];\n  }\n\n  return _embedded;\n}\n/*!\n * Special case for when users use a common location schema to represent\n * locations for use with $geoWithin.\n * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/\n *\n * @param {Object} val\n * @api private\n */\n\n\nEmbedded.prototype.$conditionalHandlers.$geoWithin = function handle$geoWithin(val) {\n  return {\n    $geometry: this.castForQuery(val.$geometry)\n  };\n};\n/*!\n * ignore\n */\n\n\nEmbedded.prototype.$conditionalHandlers.$near = Embedded.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;\nEmbedded.prototype.$conditionalHandlers.$within = Embedded.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;\nEmbedded.prototype.$conditionalHandlers.$geoIntersects = geospatial.cast$geoIntersects;\nEmbedded.prototype.$conditionalHandlers.$minDistance = castToNumber;\nEmbedded.prototype.$conditionalHandlers.$maxDistance = castToNumber;\nEmbedded.prototype.$conditionalHandlers.$exists = $exists;\n/**\n * Casts contents\n *\n * @param {Object} value\n * @api private\n */\n\nEmbedded.prototype.cast = function (val, doc, init, priorVal) {\n  if (val && val.$isSingleNested) {\n    return val;\n  }\n\n  var Constructor = this.caster;\n  var discriminatorKey = Constructor.schema.options.discriminatorKey;\n\n  if (val != null && Constructor.discriminators && typeof val[discriminatorKey] === 'string' && Constructor.discriminators[val[discriminatorKey]]) {\n    Constructor = Constructor.discriminators[val[discriminatorKey]];\n  }\n\n  var subdoc;\n\n  if (init) {\n    subdoc = new Constructor(void 0, doc ? doc.$__.selected : void 0, doc);\n    subdoc.init(val);\n  } else {\n    if (Object.keys(val).length === 0) {\n      return new Constructor({}, doc ? doc.$__.selected : void 0, doc);\n    }\n\n    return new Constructor(val, doc ? doc.$__.selected : void 0, doc, undefined, {\n      priorDoc: priorVal\n    });\n  }\n\n  return subdoc;\n};\n/**\n * Casts contents for query\n *\n * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)\n * @param {any} value\n * @api private\n */\n\n\nEmbedded.prototype.castForQuery = function ($conditional, val) {\n  var handler;\n\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n\n    return handler.call(this, val);\n  }\n\n  val = $conditional;\n\n  if (val == null) {\n    return val;\n  }\n\n  if (this.options.runSetters) {\n    val = this._applySetters(val);\n  }\n\n  return new this.caster(val);\n};\n/**\n * Async validation on this single nested doc.\n *\n * @api private\n */\n\n\nEmbedded.prototype.doValidate = function (value, fn, scope) {\n  var Constructor = this.caster;\n  var discriminatorKey = Constructor.schema.options.discriminatorKey;\n\n  if (value != null && Constructor.discriminators && typeof value[discriminatorKey] === 'string' && Constructor.discriminators[value[discriminatorKey]]) {\n    Constructor = Constructor.discriminators[value[discriminatorKey]];\n  }\n\n  SchemaType.prototype.doValidate.call(this, value, function (error) {\n    if (error) {\n      return fn(error);\n    }\n\n    if (!value) {\n      return fn(null);\n    }\n\n    if (!(value instanceof Constructor)) {\n      value = new Constructor(value);\n    }\n\n    value.validate({\n      __noPromise: true\n    }, fn);\n  }, scope);\n};\n/**\n * Synchronously validate this single nested doc\n *\n * @api private\n */\n\n\nEmbedded.prototype.doValidateSync = function (value, scope) {\n  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);\n\n  if (schemaTypeError) {\n    return schemaTypeError;\n  }\n\n  if (!value) {\n    return;\n  }\n\n  return value.validateSync();\n};\n/**\n * Adds a discriminator to this property\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @api public\n */\n\n\nEmbedded.prototype.discriminator = function (name, schema) {\n  discriminator(this.caster, name, schema);\n  this.caster.discriminators[name] = _createConstructor(schema);\n  return this.caster.discriminators[name];\n};","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/schema/embedded.js"],"names":["$exists","require","EventEmitter","SchemaType","castToNumber","discriminator","geospatial","Subdocument","module","exports","Embedded","schema","path","options","caster","_createConstructor","prototype","$basePath","$isSingleNested","call","Object","create","_embedded","SingleNested","value","parent","_this","$parent","apply","arguments","on","emit","constructor","val","isNew","$__setSchema","toBSON","toObject","transform","retainKeyOrder","virtuals","_skipDepopulateTopLevel","depopulate","flattenDecimals","i","methods","statics","$conditionalHandlers","$geoWithin","handle$geoWithin","$geometry","castForQuery","$near","$nearSphere","cast$near","$within","cast$within","$geoIntersects","cast$geoIntersects","$minDistance","$maxDistance","cast","doc","init","priorVal","Constructor","discriminatorKey","discriminators","subdoc","$__","selected","keys","length","undefined","priorDoc","$conditional","handler","Error","runSetters","_applySetters","doValidate","fn","scope","error","validate","__noPromise","doValidateSync","schemaTypeError","validateSync","name"],"mappings":"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","sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nvar $exists = require('./operators/exists');\nvar EventEmitter = require('events').EventEmitter;\nvar SchemaType = require('../schematype');\nvar castToNumber = require('./operators/helpers').castToNumber;\nvar discriminator = require('../services/model/discriminator');\nvar geospatial = require('./operators/geospatial');\n\nvar Subdocument;\n\nmodule.exports = Embedded;\n\n/**\n * Sub-schema schematype constructor\n *\n * @param {Schema} schema\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction Embedded(schema, path, options) {\n  this.caster = _createConstructor(schema);\n  this.caster.prototype.$basePath = path;\n  this.schema = schema;\n  this.$isSingleNested = true;\n  SchemaType.call(this, path, options, 'Embedded');\n}\n\n/*!\n * ignore\n */\n\nEmbedded.prototype = Object.create(SchemaType.prototype);\n\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema) {\n  // lazy load\n  Subdocument || (Subdocument = require('../types/subdocument'));\n\n  var _embedded = function SingleNested(value, path, parent) {\n    var _this = this;\n\n    this.$parent = parent;\n    Subdocument.apply(this, arguments);\n\n    if (parent) {\n      parent.on('save', function() {\n        _this.emit('save', _this);\n        _this.constructor.emit('save', _this);\n      });\n\n      parent.on('isNew', function(val) {\n        _this.isNew = val;\n        _this.emit('isNew', val);\n        _this.constructor.emit('isNew', val);\n      });\n    }\n  };\n  _embedded.prototype = Object.create(Subdocument.prototype);\n  _embedded.prototype.$__setSchema(schema);\n  _embedded.prototype.constructor = _embedded;\n  _embedded.schema = schema;\n  _embedded.$isSingleNested = true;\n  _embedded.prototype.toBSON = function() {\n    return this.toObject({\n      transform: false,\n      retainKeyOrder: true,\n      virtuals: false,\n      _skipDepopulateTopLevel: true,\n      depopulate: true,\n      flattenDecimals: false\n    });\n  };\n\n  // apply methods\n  for (var i in schema.methods) {\n    _embedded.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (i in schema.statics) {\n    _embedded[i] = schema.statics[i];\n  }\n\n  for (i in EventEmitter.prototype) {\n    _embedded[i] = EventEmitter.prototype[i];\n  }\n\n  return _embedded;\n}\n\n/*!\n * Special case for when users use a common location schema to represent\n * locations for use with $geoWithin.\n * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/\n *\n * @param {Object} val\n * @api private\n */\n\nEmbedded.prototype.$conditionalHandlers.$geoWithin = function handle$geoWithin(val) {\n  return { $geometry: this.castForQuery(val.$geometry) };\n};\n\n/*!\n * ignore\n */\n\nEmbedded.prototype.$conditionalHandlers.$near =\nEmbedded.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;\n\nEmbedded.prototype.$conditionalHandlers.$within =\nEmbedded.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;\n\nEmbedded.prototype.$conditionalHandlers.$geoIntersects =\n  geospatial.cast$geoIntersects;\n\nEmbedded.prototype.$conditionalHandlers.$minDistance = castToNumber;\nEmbedded.prototype.$conditionalHandlers.$maxDistance = castToNumber;\n\nEmbedded.prototype.$conditionalHandlers.$exists = $exists;\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @api private\n */\n\nEmbedded.prototype.cast = function(val, doc, init, priorVal) {\n  if (val && val.$isSingleNested) {\n    return val;\n  }\n\n  var Constructor = this.caster;\n  var discriminatorKey = Constructor.schema.options.discriminatorKey;\n  if (val != null &&\n      Constructor.discriminators &&\n      typeof val[discriminatorKey] === 'string' &&\n      Constructor.discriminators[val[discriminatorKey]]) {\n    Constructor = Constructor.discriminators[val[discriminatorKey]];\n  }\n\n  var subdoc;\n  if (init) {\n    subdoc = new Constructor(void 0, doc ? doc.$__.selected : void 0, doc);\n    subdoc.init(val);\n  } else {\n    if (Object.keys(val).length === 0) {\n      return new Constructor({}, doc ? doc.$__.selected : void 0, doc);\n    }\n\n    return new Constructor(val, doc ? doc.$__.selected : void 0, doc, undefined, {\n      priorDoc: priorVal\n    });\n  }\n\n  return subdoc;\n};\n\n/**\n * Casts contents for query\n *\n * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)\n * @param {any} value\n * @api private\n */\n\nEmbedded.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n    return handler.call(this, val);\n  }\n  val = $conditional;\n  if (val == null) {\n    return val;\n  }\n\n  if (this.options.runSetters) {\n    val = this._applySetters(val);\n  }\n\n  return new this.caster(val);\n};\n\n/**\n * Async validation on this single nested doc.\n *\n * @api private\n */\n\nEmbedded.prototype.doValidate = function(value, fn, scope) {\n  var Constructor = this.caster;\n  var discriminatorKey = Constructor.schema.options.discriminatorKey;\n  if (value != null &&\n      Constructor.discriminators &&\n      typeof value[discriminatorKey] === 'string' &&\n      Constructor.discriminators[value[discriminatorKey]]) {\n    Constructor = Constructor.discriminators[value[discriminatorKey]];\n  }\n\n  SchemaType.prototype.doValidate.call(this, value, function(error) {\n    if (error) {\n      return fn(error);\n    }\n    if (!value) {\n      return fn(null);\n    }\n\n    if (!(value instanceof Constructor)) {\n      value = new Constructor(value);\n    }\n    value.validate({__noPromise: true}, fn);\n  }, scope);\n};\n\n/**\n * Synchronously validate this single nested doc\n *\n * @api private\n */\n\nEmbedded.prototype.doValidateSync = function(value, scope) {\n  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);\n  if (schemaTypeError) {\n    return schemaTypeError;\n  }\n  if (!value) {\n    return;\n  }\n  return value.validateSync();\n};\n\n/**\n * Adds a discriminator to this property\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @api public\n */\n\nEmbedded.prototype.discriminator = function(name, schema) {\n  discriminator(this.caster, name, schema);\n\n  this.caster.discriminators[name] = _createConstructor(schema);\n\n  return this.caster.discriminators[name];\n};\n"]},"metadata":{},"sourceType":"script"}