{"ast":null,"code":"// take an un-split argv string and tokenize it.\nmodule.exports = function (argString) {\n  var i = 0;\n  var c = null;\n  var opening = null;\n  var args = [];\n\n  for (var ii = 0; ii < argString.length; ii++) {\n    c = argString.charAt(ii); // split on spaces unless we're in quotes.\n\n    if (c === ' ' && !opening) {\n      i++;\n      continue;\n    } // don't split the string if we're in matching\n    // opening or closing single and double quotes.\n\n\n    if (c === opening) {\n      opening = null;\n      continue;\n    } else if ((c === \"'\" || c === '\"') && !opening) {\n      opening = c;\n      continue;\n    }\n\n    if (!args[i]) args[i] = '';\n    args[i] += c;\n  }\n\n  return args;\n};","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/nconf/node_modules/yargs/lib/tokenize-arg-string.js"],"names":["module","exports","argString","i","c","opening","args","ii","length","charAt"],"mappings":"AAAA;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,SAAV,EAAqB;AACpC,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,IAAR;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGL,SAAS,CAACM,MAAhC,EAAwCD,EAAE,EAA1C,EAA8C;AAC5CH,IAAAA,CAAC,GAAGF,SAAS,CAACO,MAAV,CAAiBF,EAAjB,CAAJ,CAD4C,CAG5C;;AACA,QAAIH,CAAC,KAAK,GAAN,IAAa,CAACC,OAAlB,EAA2B;AACzBF,MAAAA,CAAC;AACD;AACD,KAP2C,CAS5C;AACA;;;AACA,QAAIC,CAAC,KAAKC,OAAV,EAAmB;AACjBA,MAAAA,OAAO,GAAG,IAAV;AACA;AACD,KAHD,MAGO,IAAI,CAACD,CAAC,KAAK,GAAN,IAAaA,CAAC,KAAK,GAApB,KAA4B,CAACC,OAAjC,EAA0C;AAC/CA,MAAAA,OAAO,GAAGD,CAAV;AACA;AACD;;AAED,QAAI,CAACE,IAAI,CAACH,CAAD,CAAT,EAAcG,IAAI,CAACH,CAAD,CAAJ,GAAU,EAAV;AACdG,IAAAA,IAAI,CAACH,CAAD,CAAJ,IAAWC,CAAX;AACD;;AAED,SAAOE,IAAP;AACD,CA9BD","sourcesContent":["// take an un-split argv string and tokenize it.\nmodule.exports = function (argString) {\n  var i = 0\n  var c = null\n  var opening = null\n  var args = []\n\n  for (var ii = 0; ii < argString.length; ii++) {\n    c = argString.charAt(ii)\n\n    // split on spaces unless we're in quotes.\n    if (c === ' ' && !opening) {\n      i++\n      continue\n    }\n\n    // don't split the string if we're in matching\n    // opening or closing single and double quotes.\n    if (c === opening) {\n      opening = null\n      continue\n    } else if ((c === \"'\" || c === '\"') && !opening) {\n      opening = c\n      continue\n    }\n\n    if (!args[i]) args[i] = ''\n    args[i] += c\n  }\n\n  return args\n}\n"]},"metadata":{},"sourceType":"script"}