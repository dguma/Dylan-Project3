{"ast":null,"code":"/*!\n * Module dependencies.\n */\nvar MPromise = require('./promise');\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\n\nvar Promise = {\n  _promise: MPromise\n};\n/**\n * Get the current promise constructor\n *\n * @api private\n */\n\nPromise.get = function () {\n  return Promise._promise;\n};\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\n\nPromise.set = function (lib) {\n  if (lib === MPromise) {\n    return Promise.reset();\n  }\n\n  Promise._promise = require('./ES6Promise');\n\n  Promise._promise.use(lib);\n\n  require('mquery').Promise = Promise._promise.ES6;\n};\n/**\n * Resets to using mpromise\n *\n * @api private\n */\n\n\nPromise.reset = function () {\n  Promise._promise = MPromise;\n};\n\nmodule.exports = Promise;","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/promise_provider.js"],"names":["MPromise","require","Promise","_promise","get","set","lib","reset","use","ES6","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAEH;AADE,CAAd;AAIA;AACA;AACA;AACA;AACA;;AACAE,OAAO,CAACE,GAAR,GAAc,YAAW;AACvB,SAAOF,OAAO,CAACC,QAAf;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AAEAD,OAAO,CAACG,GAAR,GAAc,UAASC,GAAT,EAAc;AAC1B,MAAIA,GAAG,KAAKN,QAAZ,EAAsB;AACpB,WAAOE,OAAO,CAACK,KAAR,EAAP;AACD;;AACDL,EAAAA,OAAO,CAACC,QAAR,GAAmBF,OAAO,CAAC,cAAD,CAA1B;;AACAC,EAAAA,OAAO,CAACC,QAAR,CAAiBK,GAAjB,CAAqBF,GAArB;;AACAL,EAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,OAAlB,GAA4BA,OAAO,CAACC,QAAR,CAAiBM,GAA7C;AACD,CAPD;AASA;AACA;AACA;AACA;AACA;;;AAEAP,OAAO,CAACK,KAAR,GAAgB,YAAW;AACzBL,EAAAA,OAAO,CAACC,QAAR,GAAmBH,QAAnB;AACD,CAFD;;AAIAU,MAAM,CAACC,OAAP,GAAiBT,OAAjB","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MPromise = require('./promise');\n\n/**\n * Helper for multiplexing promise implementations\n *\n * @api private\n */\n\nvar Promise = {\n  _promise: MPromise\n};\n\n/**\n * Get the current promise constructor\n *\n * @api private\n */\nPromise.get = function() {\n  return Promise._promise;\n};\n\n/**\n * Set the current promise constructor\n *\n * @api private\n */\n\nPromise.set = function(lib) {\n  if (lib === MPromise) {\n    return Promise.reset();\n  }\n  Promise._promise = require('./ES6Promise');\n  Promise._promise.use(lib);\n  require('mquery').Promise = Promise._promise.ES6;\n};\n\n/**\n * Resets to using mpromise\n *\n * @api private\n */\n\nPromise.reset = function() {\n  Promise._promise = MPromise;\n};\n\nmodule.exports = Promise;\n"]},"metadata":{},"sourceType":"script"}