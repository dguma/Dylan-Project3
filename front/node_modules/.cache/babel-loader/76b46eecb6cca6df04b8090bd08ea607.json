{"ast":null,"code":"/*\n * common.js: Internal helper and utility functions for winston\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n *\n */\nvar util = require('util'),\n    crypto = require('crypto'),\n    cycle = require('cycle'),\n    fs = require('fs'),\n    StringDecoder = require('string_decoder').StringDecoder,\n    Stream = require('stream').Stream,\n    config = require('./config'); //\n// ### function setLevels (target, past, current)\n// #### @target {Object} Object on which to set levels.\n// #### @past {Object} Previous levels set on target.\n// #### @current {Object} Current levels to set on target.\n// Create functions on the target objects for each level\n// in current.levels. If past is defined, remove functions\n// for each of those levels.\n//\n\n\nexports.setLevels = function (target, past, current, isDefault) {\n  var self = this;\n\n  if (past) {\n    Object.keys(past).forEach(function (level) {\n      delete target[level];\n    });\n  }\n\n  target.levels = current || config.npm.levels;\n\n  if (target.padLevels) {\n    target.levelLength = exports.longestElement(Object.keys(target.levels));\n  } //\n  //  Define prototype methods for each log level\n  //  e.g. target.log('info', msg) <=> target.info(msg)\n  //\n\n\n  Object.keys(target.levels).forEach(function (level) {\n    // TODO Refactor logging methods into a different object to avoid name clashes\n    if (level === 'log') {\n      console.warn('Log level named \"log\" will clash with the method \"log\". Consider using a different name.');\n      return;\n    }\n\n    target[level] = function (msg) {\n      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])\n      var args = [level].concat(Array.prototype.slice.call(arguments));\n      target.log.apply(target, args);\n    };\n  });\n  return target;\n}; //\n// ### function longestElement\n// #### @xs {Array} Array to calculate against\n// Returns the longest element in the `xs` array.\n//\n\n\nexports.longestElement = function (xs) {\n  return Math.max.apply(null, xs.map(function (x) {\n    return x.length;\n  }));\n}; //\n// ### function clone (obj)\n// #### @obj {Object} Object to clone.\n// Helper method for deep cloning pure JSON objects\n// i.e. JSON objects that are either literals or objects (no Arrays, etc)\n//\n\n\nexports.clone = function (obj) {\n  if (obj instanceof Error) {\n    // With potential custom Error objects, this might not be exactly correct,\n    // but probably close-enough for purposes of this lib.\n    var copy = {\n      message: obj.message\n    };\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\n      copy[key] = obj[key];\n    });\n    return cycle.decycle(copy);\n  } else if (!(obj instanceof Object)) {\n    return obj;\n  } else if (obj instanceof Date) {\n    return new Date(obj.getTime());\n  }\n\n  return clone(cycle.decycle(obj));\n};\n\nfunction clone(obj) {\n  //\n  // We only need to clone reference types (Object)\n  //\n  var copy = Array.isArray(obj) ? [] : {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (Array.isArray(obj[i])) {\n        copy[i] = obj[i].slice(0);\n      } else if (obj[i] instanceof Buffer) {\n        copy[i] = obj[i].slice(0);\n      } else if (typeof obj[i] != 'function') {\n        copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];\n      } else if (typeof obj[i] === 'function') {\n        copy[i] = obj[i];\n      }\n    }\n  }\n\n  return copy;\n} //\n// ### function log (options)\n// #### @options {Object} All information about the log serialization.\n// Generic logging function for returning timestamped strings\n// with the following options:\n//\n//    {\n//      level:     'level to add to serialized message',\n//      message:   'message to serialize',\n//      meta:      'additional logging metadata to serialize',\n//      colorize:  false, // Colorizes output (only if `.json` is false)\n//      align:     false  // Align message level.\n//      timestamp: true   // Adds a timestamp to the serialized message\n//      label:     'label to prepend the message'\n//    }\n//\n\n\nexports.log = function (options) {\n  var timestampFn = typeof options.timestamp === 'function' ? options.timestamp : exports.timestamp,\n      timestamp = options.timestamp ? timestampFn() : null,\n      showLevel = options.showLevel === undefined ? true : options.showLevel,\n      meta = options.meta !== null && options.meta !== undefined ? exports.clone(options.meta) : options.meta || null,\n      output; //\n  // raw mode is intended for outputing winston as streaming JSON to STDOUT\n  //\n\n  if (options.raw) {\n    if (typeof meta !== 'object' && meta != null) {\n      meta = {\n        meta: meta\n      };\n    }\n\n    output = exports.clone(meta) || {};\n    output.level = options.level; //\n    // Remark (jcrugzz): This used to be output.message = options.message.stripColors.\n    // I do not know why this is, it does not make sense but im handling that\n    // case here as well as handling the case that does make sense which is to\n    // make the `output.message = options.message`\n    //\n\n    output.message = options.message.stripColors ? options.message.stripColors : options.message;\n    return JSON.stringify(output);\n  } //\n  // json mode is intended for pretty printing multi-line json to the terminal\n  //\n\n\n  if (options.json || true === options.logstash) {\n    if (typeof meta !== 'object' && meta != null) {\n      meta = {\n        meta: meta\n      };\n    }\n\n    output = exports.clone(meta) || {};\n    output.level = options.level;\n    output.message = output.message || '';\n\n    if (options.label) {\n      output.label = options.label;\n    }\n\n    if (options.message) {\n      output.message = options.message;\n    }\n\n    if (timestamp) {\n      output.timestamp = timestamp;\n    }\n\n    if (options.logstash === true) {\n      // use logstash format\n      var logstashOutput = {};\n\n      if (output.message !== undefined) {\n        logstashOutput['@message'] = output.message;\n        delete output.message;\n      }\n\n      if (output.timestamp !== undefined) {\n        logstashOutput['@timestamp'] = output.timestamp;\n        delete output.timestamp;\n      }\n\n      logstashOutput['@fields'] = exports.clone(output);\n      output = logstashOutput;\n    }\n\n    if (typeof options.stringify === 'function') {\n      return options.stringify(output);\n    }\n\n    return JSON.stringify(output, function (key, value) {\n      return value instanceof Buffer ? value.toString('base64') : value;\n    });\n  } //\n  // Remark: this should really be a call to `util.format`.\n  //\n\n\n  if (typeof options.formatter == 'function') {\n    options.meta = meta || options.meta;\n\n    if (options.meta instanceof Error) {\n      // Force converting the Error to an plain object now so it\n      // will not be messed up by decycle() when cloning options\n      options.meta = exports.clone(options.meta);\n    }\n\n    return String(options.formatter(exports.clone(options)));\n  }\n\n  output = timestamp ? timestamp + ' - ' : '';\n\n  if (showLevel) {\n    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true ? config.colorize(options.level) : options.level;\n  }\n\n  output += options.align ? '\\t' : '';\n  output += timestamp || showLevel ? ': ' : '';\n  output += options.label ? '[' + options.label + '] ' : '';\n  output += options.colorize === 'all' || options.colorize === 'message' ? config.colorize(options.level, options.message) : options.message;\n\n  if (meta !== null && meta !== undefined) {\n    if (typeof meta !== 'object') {\n      output += ' ' + meta;\n    } else if (Object.keys(meta).length > 0) {\n      if (typeof options.prettyPrint === 'function') {\n        output += ' ' + options.prettyPrint(meta);\n      } else if (options.prettyPrint) {\n        output += ' ' + '\\n' + util.inspect(meta, false, options.depth || null, options.colorize);\n      } else if (options.humanReadableUnhandledException && Object.keys(meta).length >= 5 && meta.hasOwnProperty('date') && meta.hasOwnProperty('process') && meta.hasOwnProperty('os') && meta.hasOwnProperty('trace') && meta.hasOwnProperty('stack')) {\n        //\n        // If meta carries unhandled exception data serialize the stack nicely\n        //\n        var stack = meta.stack;\n        delete meta.stack;\n        delete meta.trace;\n        output += ' ' + exports.serialize(meta);\n\n        if (stack) {\n          output += '\\n' + stack.join('\\n');\n        }\n      } else {\n        output += ' ' + exports.serialize(meta);\n      }\n    }\n  }\n\n  return output;\n};\n\nexports.capitalize = function (str) {\n  return str && str[0].toUpperCase() + str.slice(1);\n}; //\n// ### function hash (str)\n// #### @str {string} String to hash.\n// Utility function for creating unique ids\n// e.g. Profiling incoming HTTP requests on the same tick\n//\n\n\nexports.hash = function (str) {\n  return crypto.createHash('sha1').update(str).digest('hex');\n}; //\n// ### function pad (n)\n// Returns a padded string if `n < 10`.\n//\n\n\nexports.pad = function (n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}; //\n// ### function timestamp ()\n// Returns a timestamp string for the current time.\n//\n\n\nexports.timestamp = function () {\n  return new Date().toISOString();\n}; //\n// ### function serialize (obj, key)\n// #### @obj {Object|literal} Object to serialize\n// #### @key {string} **Optional** Optional key represented by obj in a larger object\n// Performs simple comma-separated, `key=value` serialization for Loggly when\n// logging to non-JSON inputs.\n//\n\n\nexports.serialize = function (obj, key) {\n  // symbols cannot be directly casted to strings\n  if (typeof key === 'symbol') {\n    key = key.toString();\n  }\n\n  if (typeof obj === 'symbol') {\n    obj = obj.toString();\n  }\n\n  if (obj === null) {\n    obj = 'null';\n  } else if (obj === undefined) {\n    obj = 'undefined';\n  } else if (obj === false) {\n    obj = 'false';\n  }\n\n  if (typeof obj !== 'object') {\n    return key ? key + '=' + obj : obj;\n  }\n\n  if (obj instanceof Buffer) {\n    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');\n  }\n\n  var msg = '',\n      keys = Object.keys(obj),\n      length = keys.length;\n\n  for (var i = 0; i < length; i++) {\n    if (Array.isArray(obj[keys[i]])) {\n      msg += keys[i] + '=[';\n\n      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {\n        msg += exports.serialize(obj[keys[i]][j]);\n\n        if (j < l - 1) {\n          msg += ', ';\n        }\n      }\n\n      msg += ']';\n    } else if (obj[keys[i]] instanceof Date) {\n      msg += keys[i] + '=' + obj[keys[i]];\n    } else {\n      msg += exports.serialize(obj[keys[i]], keys[i]);\n    }\n\n    if (i < length - 1) {\n      msg += ', ';\n    }\n  }\n\n  return msg;\n}; //\n// ### function tailFile (options, callback)\n// #### @options {Object} Options for tail.\n// #### @callback {function} Callback to execute on every line.\n// `tail -f` a file. Options must include file.\n//\n\n\nexports.tailFile = function (options, callback) {\n  var buffer = Buffer.alloc(64 * 1024),\n      decode = new StringDecoder('utf8'),\n      stream = new Stream(),\n      buff = '',\n      pos = 0,\n      row = 0;\n\n  if (options.start === -1) {\n    delete options.start;\n  }\n\n  stream.readable = true;\n\n  stream.destroy = function () {\n    stream.destroyed = true;\n    stream.emit('end');\n    stream.emit('close');\n  };\n\n  fs.open(options.file, 'a+', '0644', function (err, fd) {\n    if (err) {\n      if (!callback) {\n        stream.emit('error', err);\n      } else {\n        callback(err);\n      }\n\n      stream.destroy();\n      return;\n    }\n\n    (function read() {\n      if (stream.destroyed) {\n        fs.close(fd, nop);\n        return;\n      }\n\n      return fs.read(fd, buffer, 0, buffer.length, pos, function (err, bytes) {\n        if (err) {\n          if (!callback) {\n            stream.emit('error', err);\n          } else {\n            callback(err);\n          }\n\n          stream.destroy();\n          return;\n        }\n\n        if (!bytes) {\n          if (buff) {\n            if (options.start == null || row > options.start) {\n              if (!callback) {\n                stream.emit('line', buff);\n              } else {\n                callback(null, buff);\n              }\n            }\n\n            row++;\n            buff = '';\n          }\n\n          return setTimeout(read, 1000);\n        }\n\n        var data = decode.write(buffer.slice(0, bytes));\n\n        if (!callback) {\n          stream.emit('data', data);\n        }\n\n        var data = (buff + data).split(/\\n+/),\n            l = data.length - 1,\n            i = 0;\n\n        for (; i < l; i++) {\n          if (options.start == null || row > options.start) {\n            if (!callback) {\n              stream.emit('line', data[i]);\n            } else {\n              callback(null, data[i]);\n            }\n          }\n\n          row++;\n        }\n\n        buff = data[l];\n        pos += bytes;\n        return read();\n      });\n    })();\n  });\n\n  if (!callback) {\n    return stream;\n  }\n\n  return stream.destroy;\n}; //\n// ### function stringArrayToSet (array)\n// #### @strArray {Array} Array of Set-elements as strings.\n// #### @errMsg {string} **Optional** Custom error message thrown on invalid input.\n// Returns a Set-like object with strArray's elements as keys (each with the value true).\n//\n\n\nexports.stringArrayToSet = function (strArray, errMsg) {\n  if (typeof errMsg === 'undefined') {\n    errMsg = 'Cannot make set from Array with non-string elements';\n  }\n\n  return strArray.reduce(function (set, el) {\n    if (!(typeof el === 'string' || el instanceof String)) {\n      throw new Error(errMsg);\n    }\n\n    set[el] = true;\n    return set;\n  }, Object.create(null));\n};\n\nfunction nop() {}","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/winston/lib/winston/common.js"],"names":["util","require","crypto","cycle","fs","StringDecoder","Stream","config","exports","setLevels","target","past","current","isDefault","self","Object","keys","forEach","level","levels","npm","padLevels","levelLength","longestElement","console","warn","msg","args","concat","Array","prototype","slice","call","arguments","log","apply","xs","Math","max","map","x","length","clone","obj","Error","copy","message","getOwnPropertyNames","key","decycle","Date","getTime","isArray","i","hasOwnProperty","Buffer","options","timestampFn","timestamp","showLevel","undefined","meta","output","raw","stripColors","JSON","stringify","json","logstash","label","logstashOutput","value","toString","formatter","String","colorize","align","prettyPrint","inspect","depth","humanReadableUnhandledException","stack","trace","serialize","join","capitalize","str","toUpperCase","hash","createHash","update","digest","pad","n","toISOString","j","l","tailFile","callback","buffer","alloc","decode","stream","buff","pos","row","start","readable","destroy","destroyed","emit","open","file","err","fd","read","close","nop","bytes","setTimeout","data","write","split","stringArrayToSet","strArray","errMsg","reduce","set","el","create"],"mappings":"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","sourcesContent":["/*\n * common.js: Internal helper and utility functions for winston\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n *\n */\n\nvar util = require('util'),\n    crypto = require('crypto'),\n    cycle = require('cycle'),\n    fs = require('fs'),\n    StringDecoder = require('string_decoder').StringDecoder,\n    Stream = require('stream').Stream,\n    config = require('./config');\n\n//\n// ### function setLevels (target, past, current)\n// #### @target {Object} Object on which to set levels.\n// #### @past {Object} Previous levels set on target.\n// #### @current {Object} Current levels to set on target.\n// Create functions on the target objects for each level\n// in current.levels. If past is defined, remove functions\n// for each of those levels.\n//\nexports.setLevels = function (target, past, current, isDefault) {\n  var self = this;\n  if (past) {\n    Object.keys(past).forEach(function (level) {\n      delete target[level];\n    });\n  }\n\n  target.levels = current || config.npm.levels;\n  if (target.padLevels) {\n    target.levelLength = exports.longestElement(Object.keys(target.levels));\n  }\n\n  //\n  //  Define prototype methods for each log level\n  //  e.g. target.log('info', msg) <=> target.info(msg)\n  //\n  Object.keys(target.levels).forEach(function (level) {\n\n    // TODO Refactor logging methods into a different object to avoid name clashes\n    if (level === 'log') {\n      console.warn('Log level named \"log\" will clash with the method \"log\". Consider using a different name.');\n      return;\n    }\n\n    target[level] = function (msg) {\n      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])\n      var args = [level].concat(Array.prototype.slice.call(arguments));\n      target.log.apply(target, args);\n    };\n  });\n\n  return target;\n};\n\n//\n// ### function longestElement\n// #### @xs {Array} Array to calculate against\n// Returns the longest element in the `xs` array.\n//\nexports.longestElement = function (xs) {\n  return Math.max.apply(\n    null,\n    xs.map(function (x) { return x.length; })\n  );\n};\n\n//\n// ### function clone (obj)\n// #### @obj {Object} Object to clone.\n// Helper method for deep cloning pure JSON objects\n// i.e. JSON objects that are either literals or objects (no Arrays, etc)\n//\nexports.clone = function (obj) {\n  if (obj instanceof Error) {\n    // With potential custom Error objects, this might not be exactly correct,\n    // but probably close-enough for purposes of this lib.\n    var copy = { message: obj.message };\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\n      copy[key] = obj[key];\n    });\n\n    return cycle.decycle(copy);\n  }\n  else if (!(obj instanceof Object)) {\n    return obj;\n  }\n  else if (obj instanceof Date) {\n    return new Date(obj.getTime());\n  }\n\n  return clone(cycle.decycle(obj));\n};\n\nfunction clone(obj) {\n  //\n  // We only need to clone reference types (Object)\n  //\n  var copy = Array.isArray(obj) ? [] : {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (Array.isArray(obj[i])) {\n        copy[i] = obj[i].slice(0);\n      }\n      else if (obj[i] instanceof Buffer) {\n        copy[i] = obj[i].slice(0);\n      }\n      else if (typeof obj[i] != 'function') {\n        copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];\n      }\n      else if (typeof obj[i] === 'function') {\n        copy[i] = obj[i];\n      }\n    }\n  }\n\n  return copy;\n}\n\n//\n// ### function log (options)\n// #### @options {Object} All information about the log serialization.\n// Generic logging function for returning timestamped strings\n// with the following options:\n//\n//    {\n//      level:     'level to add to serialized message',\n//      message:   'message to serialize',\n//      meta:      'additional logging metadata to serialize',\n//      colorize:  false, // Colorizes output (only if `.json` is false)\n//      align:     false  // Align message level.\n//      timestamp: true   // Adds a timestamp to the serialized message\n//      label:     'label to prepend the message'\n//    }\n//\nexports.log = function (options) {\n  var timestampFn = typeof options.timestamp === 'function'\n        ? options.timestamp\n        : exports.timestamp,\n      timestamp   = options.timestamp ? timestampFn() : null,\n      showLevel   = options.showLevel === undefined ? true : options.showLevel,\n      meta        = options.meta !== null && options.meta !== undefined\n        ? exports.clone(options.meta)\n        : options.meta || null,\n      output;\n\n  //\n  // raw mode is intended for outputing winston as streaming JSON to STDOUT\n  //\n  if (options.raw) {\n    if (typeof meta !== 'object' && meta != null) {\n      meta = { meta: meta };\n    }\n    output         = exports.clone(meta) || {};\n    output.level   = options.level;\n    //\n    // Remark (jcrugzz): This used to be output.message = options.message.stripColors.\n    // I do not know why this is, it does not make sense but im handling that\n    // case here as well as handling the case that does make sense which is to\n    // make the `output.message = options.message`\n    //\n    output.message = options.message.stripColors\n      ? options.message.stripColors\n      : options.message;\n\n    return JSON.stringify(output);\n  }\n\n  //\n  // json mode is intended for pretty printing multi-line json to the terminal\n  //\n  if (options.json || true === options.logstash) {\n    if (typeof meta !== 'object' && meta != null) {\n      meta = { meta: meta };\n    }\n\n    output         = exports.clone(meta) || {};\n    output.level   = options.level;\n    output.message = output.message || '';\n\n    if (options.label) { output.label = options.label; }\n    if (options.message) { output.message = options.message; }\n    if (timestamp) { output.timestamp = timestamp; }\n\n    if (options.logstash === true) {\n      // use logstash format\n      var logstashOutput = {};\n      if (output.message !== undefined) {\n        logstashOutput['@message'] = output.message;\n        delete output.message;\n      }\n\n      if (output.timestamp !== undefined) {\n        logstashOutput['@timestamp'] = output.timestamp;\n        delete output.timestamp;\n      }\n\n      logstashOutput['@fields'] = exports.clone(output);\n      output = logstashOutput;\n    }\n\n    if (typeof options.stringify === 'function') {\n      return options.stringify(output);\n    }\n\n    return JSON.stringify(output, function (key, value) {\n      return value instanceof Buffer\n        ? value.toString('base64')\n        : value;\n    });\n  }\n\n  //\n  // Remark: this should really be a call to `util.format`.\n  //\n  if (typeof options.formatter == 'function') {\n    options.meta = meta || options.meta;\n    if (options.meta instanceof Error) {\n      // Force converting the Error to an plain object now so it\n      // will not be messed up by decycle() when cloning options\n      options.meta = exports.clone(options.meta);\n    }\n    return String(options.formatter(exports.clone(options)));\n  }\n\n  output = timestamp ? timestamp + ' - ' : '';\n  if (showLevel) {\n    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true\n      ? config.colorize(options.level)\n      : options.level;\n  }\n\n  output += (options.align) ? '\\t' : '';\n  output += (timestamp || showLevel) ? ': ' : '';\n  output += options.label ? ('[' + options.label + '] ') : '';\n  output += options.colorize === 'all' || options.colorize === 'message'\n    ? config.colorize(options.level, options.message)\n    : options.message;\n\n  if (meta !== null && meta !== undefined) {\n    if (typeof meta !== 'object') {\n      output += ' ' + meta;\n    }\n    else if (Object.keys(meta).length > 0) {\n      if (typeof options.prettyPrint === 'function') {\n        output += ' ' + options.prettyPrint(meta);\n      } else if (options.prettyPrint) {\n        output += ' ' + '\\n' + util.inspect(meta, false, options.depth || null, options.colorize);\n      } else if (\n        options.humanReadableUnhandledException\n          && Object.keys(meta).length >= 5\n          && meta.hasOwnProperty('date')\n          && meta.hasOwnProperty('process')\n          && meta.hasOwnProperty('os')\n          && meta.hasOwnProperty('trace')\n          && meta.hasOwnProperty('stack')) {\n\n        //\n        // If meta carries unhandled exception data serialize the stack nicely\n        //\n        var stack = meta.stack;\n        delete meta.stack;\n        delete meta.trace;\n        output += ' ' + exports.serialize(meta);\n\n        if (stack) {\n          output += '\\n' + stack.join('\\n');\n        }\n      } else {\n        output += ' ' + exports.serialize(meta);\n      }\n    }\n  }\n\n  return output;\n};\n\nexports.capitalize = function (str) {\n  return str && str[0].toUpperCase() + str.slice(1);\n};\n\n//\n// ### function hash (str)\n// #### @str {string} String to hash.\n// Utility function for creating unique ids\n// e.g. Profiling incoming HTTP requests on the same tick\n//\nexports.hash = function (str) {\n  return crypto.createHash('sha1').update(str).digest('hex');\n};\n\n//\n// ### function pad (n)\n// Returns a padded string if `n < 10`.\n//\nexports.pad = function (n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n};\n\n//\n// ### function timestamp ()\n// Returns a timestamp string for the current time.\n//\nexports.timestamp = function () {\n  return new Date().toISOString();\n};\n\n//\n// ### function serialize (obj, key)\n// #### @obj {Object|literal} Object to serialize\n// #### @key {string} **Optional** Optional key represented by obj in a larger object\n// Performs simple comma-separated, `key=value` serialization for Loggly when\n// logging to non-JSON inputs.\n//\nexports.serialize = function (obj, key) {\n  // symbols cannot be directly casted to strings\n  if (typeof key === 'symbol') {\n    key = key.toString()\n  }\n  if (typeof obj === 'symbol') {\n    obj = obj.toString()\n  }\n\n  if (obj === null) {\n    obj = 'null';\n  }\n  else if (obj === undefined) {\n    obj = 'undefined';\n  }\n  else if (obj === false) {\n    obj = 'false';\n  }\n\n  if (typeof obj !== 'object') {\n    return key ? key + '=' + obj : obj;\n  }\n\n  if (obj instanceof Buffer) {\n    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');\n  }\n\n  var msg = '',\n      keys = Object.keys(obj),\n      length = keys.length;\n\n  for (var i = 0; i < length; i++) {\n    if (Array.isArray(obj[keys[i]])) {\n      msg += keys[i] + '=[';\n\n      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {\n        msg += exports.serialize(obj[keys[i]][j]);\n        if (j < l - 1) {\n          msg += ', ';\n        }\n      }\n\n      msg += ']';\n    }\n    else if (obj[keys[i]] instanceof Date) {\n      msg += keys[i] + '=' + obj[keys[i]];\n    }\n    else {\n      msg += exports.serialize(obj[keys[i]], keys[i]);\n    }\n\n    if (i < length - 1) {\n      msg += ', ';\n    }\n  }\n\n  return msg;\n};\n\n//\n// ### function tailFile (options, callback)\n// #### @options {Object} Options for tail.\n// #### @callback {function} Callback to execute on every line.\n// `tail -f` a file. Options must include file.\n//\nexports.tailFile = function(options, callback) {\n  var buffer = Buffer.alloc(64 * 1024)\n    , decode = new StringDecoder('utf8')\n    , stream = new Stream\n    , buff = ''\n    , pos = 0\n    , row = 0;\n\n  if (options.start === -1) {\n    delete options.start;\n  }\n\n  stream.readable = true;\n  stream.destroy = function() {\n    stream.destroyed = true;\n    stream.emit('end');\n    stream.emit('close');\n  };\n\n  fs.open(options.file, 'a+', '0644', function(err, fd) {\n    if (err) {\n      if (!callback) {\n        stream.emit('error', err);\n      } else {\n        callback(err);\n      }\n      stream.destroy();\n      return;\n    }\n\n    (function read() {\n      if (stream.destroyed) {\n        fs.close(fd, nop);\n        return;\n      }\n\n      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {\n        if (err) {\n          if (!callback) {\n            stream.emit('error', err);\n          } else {\n            callback(err);\n          }\n          stream.destroy();\n          return;\n        }\n\n        if (!bytes) {\n          if (buff) {\n            if (options.start == null || row > options.start) {\n              if (!callback) {\n                stream.emit('line', buff);\n              } else {\n                callback(null, buff);\n              }\n            }\n            row++;\n            buff = '';\n          }\n          return setTimeout(read, 1000);\n        }\n\n        var data = decode.write(buffer.slice(0, bytes));\n\n        if (!callback) {\n          stream.emit('data', data);\n        }\n\n        var data = (buff + data).split(/\\n+/)\n          , l = data.length - 1\n          , i = 0;\n\n        for (; i < l; i++) {\n          if (options.start == null || row > options.start) {\n            if (!callback) {\n              stream.emit('line', data[i]);\n            } else {\n              callback(null, data[i]);\n            }\n          }\n          row++;\n        }\n\n        buff = data[l];\n\n        pos += bytes;\n\n        return read();\n      });\n    })();\n  });\n\n  if (!callback) {\n    return stream;\n  }\n\n  return stream.destroy;\n};\n\n//\n// ### function stringArrayToSet (array)\n// #### @strArray {Array} Array of Set-elements as strings.\n// #### @errMsg {string} **Optional** Custom error message thrown on invalid input.\n// Returns a Set-like object with strArray's elements as keys (each with the value true).\n//\nexports.stringArrayToSet = function (strArray, errMsg) {\n  if (typeof errMsg === 'undefined') {\n    errMsg = 'Cannot make set from Array with non-string elements';\n  }\n  return strArray.reduce(function (set, el) {\n    if (!(typeof el === 'string' || el instanceof String)) {\n      throw new Error(errMsg);\n    }\n    set[el] = true;\n    return set;\n  }, Object.create(null));\n};\n\nfunction nop () {}\n"]},"metadata":{},"sourceType":"script"}