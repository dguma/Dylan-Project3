{"ast":null,"code":"/**\n * MongooseError constructor\n *\n * @param {String} msg Error message\n * @inherits Error https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\n */\nfunction MongooseError(msg) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.message = msg;\n  this.name = 'MongooseError';\n}\n/*!\n * Inherits from Error.\n */\n\n\nMongooseError.prototype = Object.create(Error.prototype);\nMongooseError.prototype.constructor = Error;\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = MongooseError;\n/**\n * The default built-in validator error messages.\n *\n * @see Error.messages #error_messages_MongooseError-messages\n * @api public\n */\n\nMongooseError.messages = require('./messages'); // backward compat\n\nMongooseError.Messages = MongooseError.messages;\n/**\n * This error will be called when `save()` fails because the underlying\n * document was not found. The constructor takes one parameter, the\n * conditions that mongoose passed to `update()` when trying to update\n * the document.\n *\n * @api public\n */\n\nMongooseError.DocumentNotFoundError = require('./notFound');\n/*!\n * Expose subclasses\n */\n\nMongooseError.CastError = require('./cast');\nMongooseError.ValidationError = require('./validation');\nMongooseError.ValidatorError = require('./validator');\nMongooseError.VersionError = require('./version');\nMongooseError.OverwriteModelError = require('./overwriteModel');\nMongooseError.MissingSchemaError = require('./missingSchema');\nMongooseError.DivergentArrayError = require('./divergentArray');","map":{"version":3,"sources":["/home/pumaguma/Desktop/project-draft/front/node_modules/mongoose/lib/error/index.js"],"names":["MongooseError","msg","Error","call","captureStackTrace","stack","message","name","prototype","Object","create","constructor","module","exports","messages","require","Messages","DocumentNotFoundError","CastError","ValidationError","ValidatorError","VersionError","OverwriteModelError","MissingSchemaError","DivergentArrayError"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AAC1BC,EAAAA,KAAK,CAACC,IAAN,CAAW,IAAX;;AACA,MAAID,KAAK,CAACE,iBAAV,EAA6B;AAC3BF,IAAAA,KAAK,CAACE,iBAAN,CAAwB,IAAxB;AACD,GAFD,MAEO;AACL,SAAKC,KAAL,GAAa,IAAIH,KAAJ,GAAYG,KAAzB;AACD;;AACD,OAAKC,OAAL,GAAeL,GAAf;AACA,OAAKM,IAAL,GAAY,eAAZ;AACD;AAED;AACA;AACA;;;AAEAP,aAAa,CAACQ,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAcR,KAAK,CAACM,SAApB,CAA1B;AACAR,aAAa,CAACQ,SAAd,CAAwBG,WAAxB,GAAsCT,KAAtC;AAEA;AACA;AACA;;AAEAU,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGb,aAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAA,aAAa,CAACc,QAAd,GAAyBC,OAAO,CAAC,YAAD,CAAhC,C,CAEA;;AACAf,aAAa,CAACgB,QAAd,GAAyBhB,aAAa,CAACc,QAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAd,aAAa,CAACiB,qBAAd,GAAsCF,OAAO,CAAC,YAAD,CAA7C;AAEA;AACA;AACA;;AAEAf,aAAa,CAACkB,SAAd,GAA0BH,OAAO,CAAC,QAAD,CAAjC;AACAf,aAAa,CAACmB,eAAd,GAAgCJ,OAAO,CAAC,cAAD,CAAvC;AACAf,aAAa,CAACoB,cAAd,GAA+BL,OAAO,CAAC,aAAD,CAAtC;AACAf,aAAa,CAACqB,YAAd,GAA6BN,OAAO,CAAC,WAAD,CAApC;AACAf,aAAa,CAACsB,mBAAd,GAAoCP,OAAO,CAAC,kBAAD,CAA3C;AACAf,aAAa,CAACuB,kBAAd,GAAmCR,OAAO,CAAC,iBAAD,CAA1C;AACAf,aAAa,CAACwB,mBAAd,GAAoCT,OAAO,CAAC,kBAAD,CAA3C","sourcesContent":["\n/**\n * MongooseError constructor\n *\n * @param {String} msg Error message\n * @inherits Error https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error\n */\n\nfunction MongooseError(msg) {\n  Error.call(this);\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.message = msg;\n  this.name = 'MongooseError';\n}\n\n/*!\n * Inherits from Error.\n */\n\nMongooseError.prototype = Object.create(Error.prototype);\nMongooseError.prototype.constructor = Error;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = MongooseError;\n\n/**\n * The default built-in validator error messages.\n *\n * @see Error.messages #error_messages_MongooseError-messages\n * @api public\n */\n\nMongooseError.messages = require('./messages');\n\n// backward compat\nMongooseError.Messages = MongooseError.messages;\n\n/**\n * This error will be called when `save()` fails because the underlying\n * document was not found. The constructor takes one parameter, the\n * conditions that mongoose passed to `update()` when trying to update\n * the document.\n *\n * @api public\n */\n\nMongooseError.DocumentNotFoundError = require('./notFound');\n\n/*!\n * Expose subclasses\n */\n\nMongooseError.CastError = require('./cast');\nMongooseError.ValidationError = require('./validation');\nMongooseError.ValidatorError = require('./validator');\nMongooseError.VersionError = require('./version');\nMongooseError.OverwriteModelError = require('./overwriteModel');\nMongooseError.MissingSchemaError = require('./missingSchema');\nMongooseError.DivergentArrayError = require('./divergentArray');\n"]},"metadata":{},"sourceType":"script"}